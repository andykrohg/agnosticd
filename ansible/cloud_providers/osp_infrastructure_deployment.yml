---
- name: Step 001.1 Deploy Infrastructure
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - step001
    - step001.1
    - deploy_infrastructure
  tasks:
    - name: Run infra-template-generate Role
      import_role:
        name: infra-template-generate

    - name: Run infra-template-create Role
      import_role:
        name: infra-template-create

- name: Step 001.2 Create Inventory and SSH config setup
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - step001
    - step001.2
    - create_inventory
    - create_ssh_config
  environment:
    OS_AUTH_URL: "{{ osp_auth_url }}"
    OS_USERNAME: "{{ osp_auth_username }}"
    OS_PASSWORD: "{{ osp_auth_password }}"
    OS_PROJECT_NAME: "{{ osp_project_creation.project.name }}"
    OS_PROJECT_DOMAIN_ID: "{{ osp_auth_project_domain }}"
    OS_USER_DOMAIN_NAME: "{{ osp_auth_user_domain }}"
  tasks:
    - name: Run infra-osp-create-inventory Role
      import_role:
        name: infra-osp-create-inventory
    
#     - name: Run Common SSH Config Generator Role
#       import_role:
#         name: infra-common-ssh-config-generate

# - name: Step 001.3 Configure Linux Hosts and Wait for Connection
#   hosts:
#     - all:!windows:!network
#   gather_facts: false
#   any_errors_fatal: true
#   ignore_errors: false
#   become: true
#   tags:
#     - step001
#     - step001.3
#     - wait_ssh
#     - set_hostname
#   tasks:
#     - name: set facts for remote access
#       tags:
#         - create_inventory
#       set_fact:
#         aws_region_final: "{{hostvars['localhost'].aws_region_final}}"
#         ansible_ssh_extra_args: "{{ ansible_ssh_extra_args|d() }} -F {{output_dir}}/{{ env_type }}_{{ guid }}_ssh_conf"

#     - name: Run infra-ec2-wait_for_linux_hosts Role
#       import_role:
#         name: infra-ec2-wait_for_linux_hosts

#     - name: Run infra-ec2-linux-set-hostname Role
#       import_role:
#         name: infra-ec2-linux-set-hostname