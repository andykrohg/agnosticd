- name: Step 002 Post Infrastructure
  hosts: localhost
  connection: local
  become: false
  tags:
  - step002
  - post_infrastructure
  tasks:
    - debug:
        msg: The floating IP for {{ item }} is {{ hot_output | json_query(query) }}
      vars:
        query: "stack.outputs[?output_key=='{{ item }}'].output_value"
      with_items:
        - "ocp_api_fip"
        - "ocp_ingress_fip"
        - "clientvm_fip"

    - name: Create DNS zone
      debug:
        msg: Currently using {{ ocp_cluster_dns_zone }} on server {{ ocp_cluster_dns_server }}

    # - name: Add DNS entry for clientVM
    #   nsupdate:
    #     server: "{{ ocp_cluster_dns_server }}"
    #     zone: "{{ ocp_cluster_dns_zone }}"
    #     record: "{{ item }}.{{ guid }}"
    #     type: A
    #     value: "{{ hot_output | json_query(query) }}"
    #     # key_name:
    #     # key_secret:
    #   vars:
    #     query: "stack.outputs[?output_key=='{{ item }}'].output_value"
    #   with_items:
    #     - "ocp_api_fip"
    #     - "ocp_ingress_fip"
    #     - "clientvm_fip"

    - name: Add DNS entries to Route53
      route53:
        state: present
        record: "{{ item }}.{{ guid }}.{{ ocp_cluster_dns_zone }}"
        zone: "{{ ocp_cluster_dns_zone }}"
        type: A
        value: "{{ hot_output | json_query(query) }}"
        wait: "{{ wait_for_dns }}"
        hosted_zone_id: Z1AXX73VFAYBOP
        overwrite: true
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
      vars:
        query: "stack.outputs[?output_key=='{{ item }}'].output_value"
      with_items:
        - "ocp_api_fip"
        - "ocp_ingress_fip"
        - "clientvm_fip"

# - name: Step 002 Post Infrastructure
#   hosts: clientvms
#   become: true
#   tags:
#   - step002
#   - post_infrastructure
#   tasks:
#     - name: Create clouds.yaml file on bastion